(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{953:function(t,v,_){"use strict";_.r(v);var e=_(12),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"弹性盒模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#弹性盒模型"}},[t._v("#")]),t._v(" 弹性盒模型")]),t._v(" "),_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),_("p",[t._v("对于页面布局,常见布局模式:有"),_("code",[t._v("块布局")]),t._v(","),_("code",[t._v("行内布局")]),t._v(","),_("code",[t._v("表格布局")]),t._v(","),_("code",[t._v("定位布局")]),t._v(",对于定位布局不太灵活,会破坏文档流,浮动布局又常常会带来一些问题,同样会破坏文档流,不灵活,那么 CSS3 引入了布局模式"),_("code",[t._v("Flexbox")]),t._v("布局")]),t._v(" "),_("p",[_("strong",[t._v("主要作用")]),t._v(": 让容器盒子有能力让它的子项能够改变其宽度,高度,甚至顺序,以最佳的方式填充可用空间(主要是为了适应所有类型的显示设备和屏幕大小)")]),t._v(" "),_("p",[_("code",[t._v("Flex")]),t._v(" 容器会使子项目(伸缩项目)拓展来填满可用空间,或缩小它们以防止溢出容器")]),t._v(" "),_("h2",{attrs:{id:"弹性盒模型-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#弹性盒模型-2"}},[t._v("#")]),t._v(" 弹性盒模型")]),t._v(" "),_("p",[_("code",[t._v("Flexbox")]),t._v("布局对于涉及自适应的页面非常有用,可以实现屏幕和浏览器窗口大小发生变化时保持元素的相对位置和大小不变")]),t._v(" "),_("p",[t._v("同时减少了依赖于浮动布局实现元素位置的定义以及重置元素的大小")]),t._v(" "),_("p",[_("code",[t._v("Flexbox")]),t._v("布局在定义伸缩项目大小时伸缩容器会预留一些可用空间,可以调节伸缩项目的相对大小和位置")]),t._v(" "),_("p",[t._v("可以确保伸缩容器中的多余空间平均分配多个伸缩项目")])])}),[],!1,null,null,null);v.default=a.exports}}]);
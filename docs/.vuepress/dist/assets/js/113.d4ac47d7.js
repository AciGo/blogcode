(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{940:function(v,_,e){"use strict";e.r(_);var t=e(12),c=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"互联网公司-css-笔试真题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#互联网公司-css-笔试真题"}},[v._v("#")]),v._v(" 互联网公司 css 笔试真题")]),v._v(" "),e("h2",{attrs:{id:"快速导航"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速导航"}},[v._v("#")]),v._v(" 快速导航")]),v._v(" "),e("TOC"),v._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),e("p",[v._v("以下一些题,均来各大小公司现场的真实笔试题,所有面试题都经过笔者一一验证,如有不足之处,谢谢读者指正和完善")]),v._v(" "),e("h2",{attrs:{id:"第-1-题-伪类与伪元素的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第-1-题-伪类与伪元素的区别"}},[v._v("#")]),v._v(" 第 1 题-伪类与伪元素的区别")]),v._v(" "),e("ul",[e("li",[e("h3",{attrs:{id:"伪类-用来选择那些不能够被普通选择器选择的文档之外的元素-比如-hover"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类-用来选择那些不能够被普通选择器选择的文档之外的元素-比如-hover"}},[v._v("#")]),v._v(" "),e("strong",[v._v("伪类")]),v._v(": 用来选择那些不能够被普通选择器选择的文档之外的元素,比如:"),e("code",[v._v("hover")])])])]),v._v(" "),e("p",[v._v("伪类用于当已有元素处于的某个状态时,为其添加对应的样式,这个状态是根据用户行为而动态变化的。")]),v._v(" "),e("p",[v._v("比如，当用户悬停在指定的元素时，我们可以通过"),e("code",[v._v(":hover")]),v._v(" 来描述这个元素的状态。")]),v._v(" "),e("p",[v._v("虽然它和普通的 css 类相似，可以为已有的元素添加样式，但是"),e("strong",[v._v("它只有处于 dom 树无法描述的状态下才能为元素添加样式")]),v._v("，所以将其称为伪类")]),v._v(" "),e("p",[v._v("常见伪类:"),e("code",[v._v(":link")]),v._v(","),e("code",[v._v(":visited")]),v._v(","),e("code",[v._v(":hover")]),v._v(","),e("code",[v._v(":active")]),v._v(","),e("code",[v._v(":focus")]),v._v(","),e("code",[v._v(":not()")]),v._v(","),e("code",[v._v(":first-child")]),v._v(","),e("code",[v._v(":last-child")]),v._v(","),e("code",[v._v(":nth-child")]),v._v(","),e("code",[v._v(":nth-last-child")]),v._v(","),e("code",[v._v(":only-child")]),v._v(","),e("code",[v._v(":target")]),v._v(","),e("code",[v._v(":checked")]),v._v(","),e("code",[v._v(":empty")]),v._v(","),e("code",[v._v(":valid")])]),v._v(" "),e("ul",[e("li",[e("h3",{attrs:{id:"伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[v._v("#")]),v._v(" "),e("strong",[v._v("伪元素")]),v._v(":")])])]),v._v(" "),e("p",[v._v("伪元素用于创建一些不在文档树中的元素,并为其添加样式。比如说，我们可以通过"),e("code",[v._v(":before")]),v._v(" 来在一个元素前增加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中")]),v._v(" "),e("p",[v._v("伪元素前面是两个冒号，"),e("code",[v._v("E::first-line 伪元素")]),v._v("。会创造出不存在的新元素，由于 css 对单冒号的伪元素也支持，单双冒号都支持,但实际上现在** css3 已经明确规定了伪类单冒号**，"),e("strong",[v._v("伪元素双冒号的规则")]),v._v(",用于区分它们")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("::before/:before")]),v._v("在被选元素前插入内容")]),v._v(" "),e("li",[e("code",[v._v("::after")]),v._v("/"),e("code",[v._v(":after")]),v._v(" 在被元素后插入内容，其用法和特性与"),e("code",[v._v(":before")]),v._v("相似")]),v._v(" "),e("li",[e("code",[v._v("::placeholder")]),v._v(" 匹配占位符的文本，只有元素设置了 placeholder 属性时，该伪元素才能生效")]),v._v(" "),e("li",[e("code",[v._v("对于伪元素 :before")]),v._v(" 和 "),e("code",[v._v(":after")]),v._v(" 而言，属性 "),e("code",[v._v("content")]),v._v(" 是必须设置的，它的值可以为字符串，也可以有其它形式，比如指向一张图片的 URL")])]),v._v(" "),e("ul",[e("li",[e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("伪类")]),v._v("和"),e("code",[v._v("伪元素")]),v._v('都是用来表示文档树以外的"元素"。')])]),v._v(" "),e("li",[e("p",[e("code",[v._v("伪类")]),v._v("和"),e("code",[v._v("伪元素")]),v._v("分别用单冒号:和双冒号::来表示。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("伪类")]),v._v("和"),e("code",[v._v("伪元素")]),v._v("的区别，最关键的点在于如果没有伪元素(或伪类)，是否需要添加元素才能达到目的，如果是则是伪元素，反之则是伪类")])])])],1)}),[],!1,null,null,null);_.default=c.exports}}]);